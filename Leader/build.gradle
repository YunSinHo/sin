plugins {
id 'war'
	id 'java'
	id 'org.springframework.boot' version '2.7.8-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.ld'
version = '0.0.1-SNAPSHOT'
apply plugin: 'war'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}
bootWar.enabled = false
war.enabled = true
dependencies {
// https://mvnrepository.com/artifact/javax.inject/javax.inject
implementation group: 'javax.inject', name: 'javax.inject', version: '1'
implementation group: 'org.mindrot', name: 'jbcrypt', version: '0.4'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.2'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	implementation 'javax.servlet:jstl'
	implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
	implementation fileTree(dir: 'libs', include: ['*.jar'])
}
bootWar {
       archiveName("Leader.war")
}
sourceSets {
    main.java.srcDirs=['src/main/java']
    main.resources.srcDirs=['src/main/resources']
}
sourceSets {
    if (!project.hasProperty('profile') || !profile) {
        ext.profile = 'dev'
    }
    main {
        java {
            srcDirs "src/main/java"
        }
        resources {
            srcDirs "src/main/resources", "src/main/resources-env/${profile}"
        }
    }
}


tasks.named('test') {
	useJUnitPlatform()
}
